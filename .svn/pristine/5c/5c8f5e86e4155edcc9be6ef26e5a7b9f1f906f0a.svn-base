<web-app>
	<!-- 配置Spring MVC处理 -->
	<display-name>Archetype Created Web Application</display-name>
	<servlet>
		<servlet-name>dispatcher</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet
		</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:springContext.xml</param-value>
		</init-param>
		<!-- Spring 控制器中默认不会处理OPTIONS请求，通过配置开启请求处理 -->
		<init-param>
			<param-name>dispatchOptionsRequest</param-name>
			<param-value>true</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>dispatcher</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:springContext.xml</param-value>
	</context-param>
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener
		</listener-class>
		<!-- 创建自定义监听器，服务器启动的时候启动监视线程 -->
		<listener-class>com.bp.bll.BPServiceListener
		</listener-class>
	</listener>
	<!-- 解决post请求参数中文乱码的配置 -->
	<filter>
		<filter-name>springmvc001-filter</filter-name>
		<filter-class>
			org.springframework.web.filter.CharacterEncodingFilter
		</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>springmvc001-filter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<!-- springmvc中处理防止静态资源访问受阻的解决办法 第一种在该文件中加上先看的配置即可 第二种将servlet的请求映射地址的 / 
		改为 *.do 或者其他 然后每次请求的时候必须加上这样的后缀，这种不是很好 第三种在springmvc的主配置文件中 配置 -->
	<servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>*.gif</url-pattern>
		<url-pattern>*.jpg</url-pattern>
		<url-pattern>*.png</url-pattern>
		<url-pattern>*.ico</url-pattern>
		<url-pattern>*.js</url-pattern>
		<url-pattern>*.css</url-pattern>
	</servlet-mapping>

</web-app>

