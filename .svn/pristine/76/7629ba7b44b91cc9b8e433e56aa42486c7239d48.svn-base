package com.bp;


import javax.servlet.http.HttpServletRequest;

import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.ModelAndView;
import com.bp.common.*;
import com.bp.interfaces.IPersistenceService;
import com.bp.bll.*;

/**
 * 埋点服务API控制器
 * 
 * @author aaa
 *
 */
@RestController
public class WebPCApiController {
	//记录完成一次请求时间
//	private long startT;
//	private long endT;
	/**
	 * Get请求 记录埋点信息
	 * 
	 * @param key
	 *            请求埋点键
	 * @param content
	 *            请求埋点的内容信息
	 * @return
	 */
	@RequestMapping(value = "/MtBPAPI", method = RequestMethod.GET)
	public @ResponseBody ModelAndView Get(HttpServletRequest request) {
		//startT=System.currentTimeMillis();
		// TODO Auto-generated method stub
		String key = "";
		String content = "";
		try {
			key = request.getParameter("key");
			content = request.getParameter("content");
		} catch (Exception e) {
			e.printStackTrace();
			LogWritter.LogWritterInfo(WebPCApiController.class, LogEnum.Error,"埋点服务GET请求异常，"+e.getMessage());
		}
		try{
			return AddMQ(key, content);
		}catch(Exception e){
			e.printStackTrace();
			return null;
		}
	}

	/**
	 * 埋点系统POST请求
	 * 
	 * @param request
	 * @return
	 */
	@RequestMapping(value = "/MtBPAPI", method = RequestMethod.POST, produces = "application/json;charset=UTF-8")
	public @ResponseBody ModelAndView Post(HttpServletRequest request) {
		//startT=System.currentTimeMillis();
		// 注意：ajax跨域POST请求，Content-Type要设置成application/x-www-form-urlencoded
		// 设置成：application/json在服务器端获取不到数据
		String key = "";
		String content = "";
		try {
			key = request.getParameter("key");
			content = request.getParameter("content");
		} catch (Exception e) {
			e.printStackTrace();
			LogWritter.LogWritterInfo(WebPCApiController.class, LogEnum.Error,"埋点服务POST请求异常，"+e.getMessage());
		}
		try{
			return AddMQ(key, content);
		}catch(Exception e){
			e.printStackTrace();
			return null;
		}
	}

	/**
	 * POST跨域请求时，会有一个OPTIONS 嗅探请求，需要服务器端处理，否则POST请求不成功
	 * 
	 * @return
	 */
	@RequestMapping(value = "/MtBPAPI", method = RequestMethod.OPTIONS)
	public @ResponseBody ModelAndView Options() {
		return ResultInfoCommon.SuccessJson("OPTIONS嗅探请求成功!");
	}

	/**
	 * 消息添加到消息队列中去
	 * 
	 * @param key
	 * @param content
	 * @return
	 */
	public ModelAndView AddMQ(String key, String content) {
		//记录访问日志
		LogWritter.LogWritterInfo(WebPCApiController.class, LogEnum.Warn,key+content);
		
		ModelAndView resultInfo = null;
		IPersistenceService persistence=new ImpPersistenceService();
		//持久化消息
		final String[] info = new String[1];
		boolean isSuccess=persistence.SaveContentToBP(key, content, info);
		if(isSuccess){
			resultInfo = ResultInfoCommon.SuccessJson(info[0]);
		}
		else{
			resultInfo = ResultInfoCommon.FailJson(info[0]);
		}
//		endT=System.currentTimeMillis();
//		long t=endT-startT;
//		BPFlg.saveTime((int)t);
		return resultInfo;
	}
}
