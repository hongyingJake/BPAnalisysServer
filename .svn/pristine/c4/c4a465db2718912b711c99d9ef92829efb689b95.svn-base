package com.bp.bll;

import java.io.File;
import java.util.Random;

import com.bp.common.*;

/**
 * @author zyk
 * @version 创建时间：2017年8月7日 上午11:44:41 保存消息到本地文件 类说明
 */
public class SaveMQLocal {
	private static String FileName = "MQTempFile.bp";// 文件名称
	public static String ShareDir;// 共享文件目录，存放服务持久化文件
	// 静态代码块，初始化变量信息

	static {
		ConfigurationManager mgr = new ConfigurationManager();
		ShareDir = mgr.ReadConfiByNodeName("ShareDir");
	}

	/**
	 * 动态获取目录文件名称
	 * 
	 * @return
	 */
	private static String GetDirFileName() {
		Random rm = new Random();
		// 得到一个唯一文件名称
		String fileName = "f" + rm.nextInt(5) + "_" + FileName;
		// 创建文件的存储路径，使用目录分离算法
		// 获取文件名称的HashCode编码，int类型，占4个字节，upload\\3\\12\\image1.jpeg
		//int fileCode = fileName.hashCode();
		int firstDire =rm.nextInt(5);// fileCode & 0xf;// 取得第一级目录
		int secondDire =rm.nextInt(5);// (fileCode >> 4) & 0xf;// 取得第二级目录
		String filePath = ShareDir;// 获取upload的绝对目录
		// 拼接文件目录
		if (!ShareDir.endsWith(File.separator)) {
			ShareDir = ShareDir + File.separator;
		}
		filePath = ShareDir + Integer.toString(firstDire) + File.separator + Integer.toString(secondDire);
		// 目录不存在则创建
		IOTxtHelper.CreateDir(filePath);
		// 文件不存在则创建
		filePath = filePath + File.separator + fileName;
		IOTxtHelper.CreateFile(filePath);
		return filePath;
		// Path targetPath=Paths.get(filePath, String.format("%s",firstDire));
	}

	/**
	 * 保存消息到文本文件
	 * 
	 * @param value
	 * @return
	 */
	public static boolean SaveMQToTxt(final Object value) {
		Thread thread = new Thread(new Runnable() {
			public void run() {
				try {
					//String val=JsonUtility.ObjToJSONStr(value);
					IOTxtHelper.WriteLine(GetDirFileName(), value.toString());
				} catch (Exception e) {
					LogWritter.LogWritterInfo(SaveMQLocal.class, LogEnum.Error, "服务持久化消息到本地异常，异常：" + e.getMessage());
				}
			}
		});
		thread.start();
		return true;
	}

	/**
	 * 读取文件内容信息后清空信息
	 * 
	 * @param filePathName
	 * @return
	 * @throws Exception
	 */
	public static String GetInfoBackClear(String filePathName) {
		String content = "";
		try {
			content = IOTxtHelper.Read(filePathName, true);
		} catch (Exception e) {
			LogWritter.LogWritterInfo(SaveMQLocal.class, LogEnum.Error, "服务从持久化文件中读取消息异常，异常：" + e.getMessage());
		}
		return content;
	}
}
